DROP DATABASE IF EXISTS BDCOLEGIO;
CREATE DATABASE BDCOLEGIO;

USE BDCOLEGIO;

CREATE TABLE PROFESOR
(COD_PROF INT AUTO_INCREMENT PRIMARY KEY,
NOM_PROF VARCHAR(200),
APE_PROF VARCHAR(200),
DNI_PROF CHAR(8),
ESP_PROF VARCHAR(200)
);

INSERT INTO PROFESOR VALUES(NULL,'JOSE','TIZNADO','12345678','COMPUTACION');
INSERT INTO PROFESOR VALUES(NULL,'JUAN','SOTO','87654321','ARITMETICA');
SELECT * FROM PROFESOR;

CREATE TABLE APODERADO
(ID_APO INT AUTO_INCREMENT PRIMARY KEY,
NOM_APO VARCHAR(200),
APE_APO VARCHAR(200),
DNI_APO CHAR(8),
DIST_APO VARCHAR(200),
DIR_APO VARCHAR(200),
COR_APO VARCHAR(200)
);

INSERT INTO APODERADO VALUES(NULL,'KEVIN','ANTON','71481744
','CERCADO DE LIMA','AV. JUNIN 333','kevin@hotmail.com');
INSERT INTO APODERADO VALUES(NULL,'JOSE','TIZNADO','2484155
','COMAS','AV. TUPAC 3423','jose@hotmail.com');

SELECT * FROM APODERADO;


CREATE TABLE TELEFONO
(ID_TEL INT AUTO_INCREMENT PRIMARY KEY,
NUM_TEL INT,
COMP_TEL VARCHAR(200),
ID_APO INT,
CONSTRAINT FK_ID_APO_TEL FOREIGN KEY(ID_APO) REFERENCES APODERADO(ID_APO)
);

INSERT INTO TELEFONO VALUE(NULL,968755886,'MOVISTAR',1);
INSERT INTO TELEFONO VALUE(NULL,935755886,'CLARO',1);
INSERT INTO TELEFONO VALUE(NULL,954355882,'ENTEL',2);
SELECT * FROM TELEFONO;


CREATE TABLE ALUMNO
(ID_ALU INT AUTO_INCREMENT PRIMARY KEY,
NOM_ALU VARCHAR(200),
APE_ALU VARCHAR(200),
DNI_ALU CHAR(8),
DIST_ALU VARCHAR(200),
DIR_ALU VARCHAR(200),
COR_ALU VARCHAR(200),
ID_APO INT,
CONSTRAINT FK_ID_APO_ALU FOREIGN KEY(ID_APO) REFERENCES APODERADO(ID_APO)
);

INSERT INTO ALUMNO VALUES(NULL,'JUAN','ZAPATA','53454353','CERCADO DE LIMA','AV. JUNIN 333','juan@hotmail.com',1);
INSERT INTO ALUMNO VALUES(NULL,'PEDRO','HUAMAN','31233322','CERCADO DE LIMA','AV. JUNIN 333','pedro@hotmail.com',1);
INSERT INTO ALUMNO VALUES(NULL,'LUCHO','TORRES','13543323','CERCADO DE LIMA','AV. JUNIN 333','lucho@hotmail.com',1);

INSERT INTO ALUMNO VALUES(NULL,'PEPITO','ZOTO','13543323','CERCADO DE LIMA','AV. JUNIN 333','pepito@hotmail.com',2);
INSERT INTO ALUMNO VALUES(NULL,'DANIEL','ZUÑIGA','13543323','CERCADO DE LIMA','AV. JUNIN 333','zuñiga@hotmail.com',2);


SELECT * FROM ALUMNO;

CREATE TABLE NIVEL
(COD_NIV CHAR(5) PRIMARY KEY,
NOM_NIV VARCHAR(200),
PRE_NIV FLOAT
);

INSERT INTO NIVEL VALUES('NV001','INICIAL',260.00);
INSERT INTO NIVEL VALUES('NV002','PRIMARIA',320.00);
INSERT INTO NIVEL VALUES('NV003','SECUNDARIA',410.00);
SELECT * FROM NIVEL;

CREATE TABLE CURSO
(COD_CUR CHAR(6) PRIMARY KEY, /*CR0001*/
NOM_CUR VARCHAR(200),	/*Literatura - Ed.Fisica - Matematica*/
IMG_CUR VARCHAR(200)	/*Fotos*/
);

INSERT INTO CURSO VALUES('CR0001','Literatura','FLite.png');
INSERT INTO CURSO VALUES('CR0002','Ed. Fisica','FFisi.png');
INSERT INTO CURSO VALUES('CR0003','Matematica','FMate.png');
INSERT INTO CURSO VALUES('CR0004','Razonamiento Matematico',null);
INSERT INTO CURSO VALUES('CR0005','Algebra',null);
INSERT INTO CURSO VALUES('CR0006','Arte',null);
INSERT INTO CURSO VALUES('CR0007','Ciencia Naturales',null);
SELECT * FROM CURSO;

CREATE TABLE GRADO_ESCOLAR
(COD_GES CHAR(6) PRIMARY KEY,	/*GE0010*/
NOM_GES VARCHAR(200),
COD_NIV CHAR(5),
CONSTRAINT FK_COD_NIV_GES FOREIGN KEY(COD_NIV) REFERENCES NIVEL(COD_NIV)
);

INSERT INTO GRADO_ESCOLAR VALUES('GE0001','Inicial 3','NV001');
INSERT INTO GRADO_ESCOLAR VALUES('GE0002','Inicial 4','NV001');
INSERT INTO GRADO_ESCOLAR VALUES('GE0003','Inicial 5','NV001');
INSERT INTO GRADO_ESCOLAR VALUES('GE0004','1 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0005','2 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0006','3 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0007','4 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0008','5 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0009','6 GRADO','NV002');
INSERT INTO GRADO_ESCOLAR VALUES('GE0010','1 AÑO','NV003');
INSERT INTO GRADO_ESCOLAR VALUES('GE0011','2 AÑO','NV003');
INSERT INTO GRADO_ESCOLAR VALUES('GE0012','3 AÑO','NV003');
INSERT INTO GRADO_ESCOLAR VALUES('GE0013','4 AÑO','NV003');
INSERT INTO GRADO_ESCOLAR VALUES('GE0014','5 AÑO','NV003');
SELECT * FROM GRADO_ESCOLAR;

CREATE TABLE CURRICULA_NIVEL
(COD_CURR CHAR(11) PRIMARY KEY,	/*CR2020-20-1*/
COD_GES CHAR(6), 				/*GE0010*/
COD_CUR CHAR(6),
CONSTRAINT FK_COD_CUR_CURR FOREIGN KEY(COD_CUR) REFERENCES CURSO(COD_CUR)
);

CREATE TABLE MATRICULA
(COD_MAT INT AUTO_INCREMENT PRIMARY KEY,
ID_ALU INT,
COD_GES CHAR(6),		/*GE0004*/
SECC_MAT CHAR(1),		/*A-B-C-D*/
TURN_MAT CHAR(1),	  	/*M - T - N*/
FEC_MAT DATE,			/*FECHA*/
COST_MAT FLOAT, 		/*S/.400*/
CONSTRAINT FK_ID_ALU_MAT FOREIGN KEY(ID_ALU) REFERENCES ALUMNO(ID_ALU),
CONSTRAINT FK_COD_GES_MAT FOREIGN KEY(COD_GES) REFERENCES GRADO_ESCOLAR(COD_GES)
);

INSERT INTO MATRICULA VALUES(NULL,1,'GE0004','A','M','2020-02-15',400);
INSERT INTO MATRICULA VALUES(NULL,2,'GE0004','A','M','2020-02-15',400);
INSERT INTO MATRICULA VALUES(NULL,3,'GE0004','A','M','2020-02-15',400);

INSERT INTO MATRICULA VALUES(NULL,4,'GE0004','B','M','2020-02-15',400);
INSERT INTO MATRICULA VALUES(NULL,5,'GE0004','B','M','2020-02-15',400);


CREATE TABLE HORARIO
(COD_HORA CHAR(6) PRIMARY KEY,
COD_CUR CHAR(6),	/*CURSO*/
COD_PROF INT,		/*PROF*/
COD_GES CHAR(6),	/*GE0010*/
SECC_MAT CHAR(1),	/*A-B-C-D*/
DIA_HORA CHAR(3),	/*LUN-MAR-MIE-JUE-VIE*/
HORAI_HORA TIME,        /*HORAI: 00:00:00*/
HORAF_HORA TIME,	/*HORAF: 00:00:00*/
FECHAI_HORA DATE,
FECHAF_HORA DATE,
CONSTRAINT FK_COD_CUR_HORA FOREIGN KEY(COD_CUR) REFERENCES CURSO(COD_CUR),
CONSTRAINT FK_COD_PROF_HORA FOREIGN KEY(COD_PROF) REFERENCES PROFESOR(COD_PROF),
CONSTRAINT FK_COD_GES_HORA FOREIGN KEY(COD_GES) REFERENCES GRADO_ESCOLAR(COD_GES)
);

INSERT INTO HORARIO VALUES('HR0001','CR0001',2,'GE0004','A','Vie','08:00:00','08:59:00','2020-12-18','2020-12-18');
INSERT INTO HORARIO VALUES('HR0002','CR0002',1,'GE0004','B','Lun','08:00:00','08:59:00','2020-12-14','2020-12-14');
INSERT INTO HORARIO VALUES('HR0003','CR0002',1,'GE0004','A','Lun','09:00:00','10:59:00','2020-12-14','2020-12-14');
INSERT INTO HORARIO VALUES('HR0004','CR0002',1,'GE0004','A','Mie','11:00:00','13:59:00','2020-12-16','2020-12-16');
INSERT INTO HORARIO VALUES('HR0005','CR0003',2,'GE0005','A','Jue','11:00:00','13:59:00','2020-12-17','2020-12-17');



CREATE TABLE ASISTENCIA
(COD_ASIS INT AUTO_INCREMENT PRIMARY KEY,
COD_HORA CHAR(6),		/*HR0001*/
COD_MAT INT,			/*MATRICULA*/
FECHA_ASIS DATE,		/*2020-11-25*/
HORA_ASIS TIME,			/*00:00:00*/
ESTA_ASIS VARCHAR(2),	/*A-T-FI-FJ*/
CONSTRAINT FK_COD_HORA_ASI FOREIGN KEY(COD_HORA) REFERENCES HORARIO(COD_HORA),
CONSTRAINT FK_COD_MAT_ASI FOREIGN KEY(COD_MAT) REFERENCES MATRICULA(COD_MAT)
);

INSERT INTO ASISTENCIA VALUES(NULL,'HR0001',1,'2020-11-23','08:00:0','A');
INSERT INTO ASISTENCIA VALUES(NULL,'HR0001',2,'2020-11-23','08:00:0','A');
INSERT INTO ASISTENCIA VALUES(NULL,'HR0001',3,'2020-11-23','08:00:0','A');

CREATE TABLE LOGIN
(COD_LOG INT AUTO_INCREMENT PRIMARY KEY,
DNI_LOG CHAR(8),
PAS_LOG VARCHAR(20),
COD_PROF INT,			/*PROFESOR*/
ID_APO INT,				/*APODERADO*/
ID_ALU INT,				/*ALUMNO*/
TIPO_LOG VARCHAR(3),	/*PRO-APO-ALU*/
ACT_LOG	CHAR(1),		/*ACTIVO - INACTIVO*/
CONSTRAINT FK_COD_PROF_LOG FOREIGN KEY(COD_PROF) REFERENCES PROFESOR(COD_PROF),
CONSTRAINT FK_ID_APO_LOG FOREIGN KEY(ID_APO) REFERENCES APODERADO(ID_APO),
CONSTRAINT FK_ID_ALU_LOG FOREIGN KEY(ID_ALU) REFERENCES ALUMNO(ID_ALU)
);

INSERT INTO LOGIN VALUES(NULL,'12345678','123',1,NULL,NULL,'PRO','A');
INSERT INTO LOGIN VALUES(NULL,'87654321','321',1,NULL,NULL,'PRO','A');
INSERT INTO LOGIN VALUES(NULL,'53454353','123',NULL,NULL,1,'ALU','A');

SELECT * FROM LOGIN;


/*
SELECT *
FROM HORARIO AS H 
INNER JOIN ASISTENCIA AS A ON A.COD_HORA=H.COD_HORA
INNER JOIN MATRICULA AS M ON M.COD_MAT=A.COD_MAT;

SELECT 
	COD_HORA,
	COD_GES,
	SECC_MAT
FROM HORARIO WHERE COD_HORA='HR0001';


SELECT 
	M.COD_MAT,
	A.NOM_ALU
FROM MATRICULA AS M
INNER JOIN ALUMNO AS A ON M.ID_ALU=A.ID_ALU
WHERE M.COD_GES='GE0004' AND M.SECC_MAT='A'

*/


/*************************STORE PROCEDURE************************/
/***************************************************************/
DROP PROCEDURE IF EXISTS SP_BUSDEL_PROFESOR;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_PROFESOR
(BUS VARCHAR(20), T VARCHAR(3))
BEGIN
    IF T='B' THEN
        SELECT * FROM PROFESOR WHERE 
        COD_PROF=BUS OR NOM_PROF LIKE CONCAT('%',BUS,'%');
    ELSEIF T='D' THEN
        DELETE FROM PROFESOR WHERE COD_PROF=BUS;
    END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_PROFESOR('','B');



DROP PROCEDURE IF EXISTS SP_VALIDAR_LOGIN;
DELIMITER $$
CREATE PROCEDURE SP_VALIDAR_LOGIN
(DNI CHAR(8), PAS VARCHAR(20), T VARCHAR(3))
BEGIN
	DECLARE COD INT;
	DECLARE AU INT;
    DECLARE AP INT;
	
	SET AU:=(SELECT COUNT(*) FROM LOGIN WHERE DNI_LOG=DNI);
    SET AP:=(SELECT COUNT(*) FROM LOGIN WHERE DNI_LOG=DNI AND PAS_LOG=PAS);
	
	IF T='PRO' THEN
		SET COD:=(SELECT COD_PROF FROM PROFESOR WHERE DNI_PROF=DNI);
	ELSEIF T='APO' THEN
		SET COD:=(SELECT ID_APO FROM APODERADO WHERE DNI_APO=DNI);
	ELSEIF T='ALU' THEN
		SET COD:=(SELECT ID_ALU FROM ALUMNO WHERE DNI_ALU=DNI);
	END IF;
	
	IF AU=0 THEN
	SELECT 'Usuario no encontrado';
    ELSEIF AP=0 THEN
	SELECT 'La contraseña es incorrecta';
    ELSEIF (AU=1 AND AP=1)THEN
		IF COD IS NULL THEN SELECT 'No esta registrado';
		ELSE SELECT COD;
		END IF;
    END IF;

END$$
DELIMITER $$

CALL SP_VALIDAR_LOGIN('12345678','123','PRO');


DROP PROCEDURE IF EXISTS SP_BUSDEL_HORARIO;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_HORARIO
(BUS VARCHAR(20), M INT, A INT, T VARCHAR(3))
BEGIN
	IF T='B' THEN
		SELECT * FROM HORARIO WHERE
		COD_HORA=BUS OR COD_PROF=BUS;
	ELSEIF T='B1' THEN
		SELECT * FROM HORARIO WHERE COD_PROF=BUS AND  
		MONTH(FECHAI_HORA)=M AND YEAR(FECHAI_HORA)=A;
	ELSEIF T='D' THEN
		DELETE FROM HORARIO WHERE COD_HORA=BUS;
	END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_HORARIO('',0,0,'B');

DROP PROCEDURE IF EXISTS SP_GENCOD_HORA;
DELIMITER $$
CREATE PROCEDURE SP_GENCOD_HORA
(OUT COD CHAR(6))
BEGIN
    DECLARE NUM INT;
    SET NUM:=(SELECT (CONVERT(RIGHT(COD_HORA,4), INT)+1) FROM HORARIO ORDER BY COD_HORA DESC LIMIT 1);
    
    IF NUM>0 AND NUM<=9 THEN
	SET COD:=(CONCAT('HR000',NUM));
    ELSEIF NUM>=10 AND NUM<=99 THEN
	SET COD:=(CONCAT('HR00',NUM));
    ELSEIF NUM>=100 AND NUM<=999 THEN
	SET COD:=(CONCAT('HR0',NUM));
    ELSEIF NUM>=1000 AND NUM<=9999 THEN
	SET COD:=(CONCAT('HR',NUM));
    END IF;
END$$
DELIMITER $$

CALL SP_GENCOD_HORA(@R);
SELECT @R;

DROP PROCEDURE IF EXISTS SP_ADDUP_HORARIO;
DELIMITER $$
CREATE PROCEDURE SP_ADDUP_HORARIO
(COD CHAR(6), CODCUR CHAR(6), CODPROF INT, CODGE CHAR(6), SEC CHAR(1), DIA CHAR(3), HORAI TIME, HORAF TIME, FEI DATE, FEF DATE, T VARCHAR(3))
BEGIN
	IF T='G' THEN
		CALL SP_GENCOD_HORA(@R);
		INSERT INTO HORARIO VALUE(@R, CODCUR, CODPROF, CODGE, SEC, DIA, HORAI, HORAF, FEI,FEF);
	ELSEIF T='A' THEN
		UPDATE HORARIO SET COD_CUR=CODCUR, COD_PROF=CODPROF, COD_GES=CODGE, SECC_MAT=SEC, DIA_HORA=DIA, HORAI_HORA=HORAI, HORAF_HORA=HORAF, FECHAI_HORA=FEI, FECHAF_HORA=FEF WHERE COD_HORA=COD;
	END IF;
END$$
DELIMITER $$

CALL SP_ADDUP_HORARIO(NULL,'CR0005',2,'GE0005','C','Vie','08:00','11:59','2020-12-18','2020-12-18','G');
SELECT * FROM HORARIO;

DROP PROCEDURE IF EXISTS SP_BUSDEL_ASISTENCIA;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_ASISTENCIA
(BUS VARCHAR(20), T VARCHAR(3))
BEGIN	
	DECLARE GES CHAR(6);
	DECLARE SEC CHAR(1);
		
	IF T='B' THEN
		SELECT * FROM ASISTENCIA WHERE
		COD_ASIS=BUS OR COD_HORA LIKE CONCAT('%',BUS,'%');
	ELSEIF T='B2' THEN
		SET GES:=(SELECT COD_GES FROM HORARIO WHERE COD_HORA=BUS);
		SET SEC:=(SELECT SECC_MAT FROM HORARIO WHERE COD_HORA=BUS);
		
		SELECT 
			M.COD_MAT,
			A.NOM_ALU
		FROM MATRICULA AS M
		INNER JOIN ALUMNO AS A ON M.ID_ALU=A.ID_ALU
		WHERE M.COD_GES=GES AND M.SECC_MAT=SEC;

	ELSEIF T='D' THEN
		DELETE FROM ASISTENCIA WHERE COD_ASIS=BUS;
	END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_ASISTENCIA('HR0001','B2');



DROP PROCEDURE IF EXISTS SP_BUSDEL_CURSO;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_CURSO
(BUS VARCHAR(20), T VARCHAR(3))
BEGIN
	IF T='B' THEN
		SELECT * FROM CURSO WHERE
		COD_CUR=BUS OR NOM_CUR LIKE CONCAT('%',BUS,'%');
	ELSEIF T='D' THEN
		DELETE FROM CURSO WHERE COD_CUR=BUS;
	END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_CURSO('','B');


DROP PROCEDURE IF EXISTS SP_BUSDEL_NIVEL;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_NIVEL
(BUS VARCHAR(20), T VARCHAR(3))
BEGIN
	IF T='B' THEN
		SELECT * FROM NIVEL WHERE 
		COD_NIV=BUS OR NOM_NIV LIKE CONCAT('%',BUS,'%');
	ELSEIF T='D' THEN
		DELETE FROM NIVEL WHERE COD_NIV=BUS;
	END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_NIVEL('S','B');

DROP PROCEDURE IF EXISTS SP_ADDUP_NIVEL;
DELIMITER $$
CREATE PROCEDURE SP_ADDUP_NIVEL
(COD CHAR(5), NOM VARCHAR(50),PRE DECIMAL(10,2), T VARCHAR(3))
BEGIN
	IF T="G" THEN
		INSERT INTO NIVEL VALUE(COD,NOM,PRE);
	ELSEIF T="A" THEN
		UPDATE NIVEL SET NOM_NIV=NOM, PRE_NIV=PRE
		WHERE COD_NIV=COD;
	END IF;
END$$
DELIMITER $$

CALL SP_ADDUP_NIVEL('NV004','VACACIONES','130','G');

DROP PROCEDURE IF EXISTS SP_BUSDEL_GRADO;
DELIMITER $$
CREATE PROCEDURE SP_BUSDEL_GRADO
(BUS VARCHAR(20), T VARCHAR(3))
BEGIN
	IF T='B' THEN
            SELECT * FROM GRADO_ESCOLAR WHERE 
            COD_GES=BUS OR NOM_GES LIKE CONCAT('%',BUS,'%');
	ELSEIF T='D' THEN
            DELETE FROM GRADO_ESCOLAR WHERE COD_GES=BUS;
	END IF;
END$$
DELIMITER $$

CALL SP_BUSDEL_GRADO('S','B');


DROP PROCEDURE IF EXISTS SP_ADDUP_GRADO;
DELIMITER $$
CREATE PROCEDURE SP_ADDUP_GRADO
(COD CHAR(5), NOM VARCHAR(50),NIV CHAR(5), T VARCHAR(3))
BEGIN
	IF T="G" THEN
		INSERT INTO GRADO_ESCOLAR VALUE(COD,NOM,NIV);
	ELSEIF T="A" THEN
		UPDATE GRADO_ESCOLAR SET NOM_GES=NOM, COD_NIV=NIV
		WHERE COD_GES=COD;
	END IF;
END$$
DELIMITER $$

CALL SP_ADDUP_GRADO('GE0015','VACACIONES UTILES','NV003','G');


